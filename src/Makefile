##########################################################################################################################
# File automatically-generated by tool: [projectgenerator] version: [3.3.0] date: [Sat Aug 03 22:01:33 EDT 2019]
# File heavily modified by: Skippy, do not use the projecgenerator without verifying that it actually generates the
#    proper makefile for 2 cores.
##########################################################################################################################

# ------------------------------------------------
# Generic Makefile (based on gcc)
#
# ChangeLog :
#   2019-08-04 - Modified to compile correctly 2 cores
#	2017-02-10 - Several enhancements + project update mode
#   2015-07-22 - first version
# ------------------------------------------------

######################################
# target
######################################
TARGET_CM4 = TAStm32H745ZIT6_CM4
TARGET_CM7 = TAStm32H745ZIT6_CM7


######################################
# building variables
######################################
# debug build?
DEBUG = 1
# optimization
OPT = -Og


#######################################
# paths
#######################################
# Build path
BUILD_DIR_CM4 = build_cm4
BUILD_DIR_CM7 = build_cm7
OUT_DIR = out

######################################
# source
######################################
# C sources
C_SOURCES_COMMON = Common/Src/system_stm32h7xx_dualcore_boot_cm4_cm7.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_pcd.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_pcd_ex.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_ll_usb.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_cortex.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_i2c_ex.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_ll_sdmmc.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_ll_delayblock.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sd.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_sd_ex.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_spi_ex.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_tim.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_tim_ex.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_uart_ex.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_rcc_ex.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_flash_ex.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_gpio.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_hsem.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_dma_ex.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_mdma.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_pwr.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_pwr_ex.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal.c \
Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_exti.c

C_SOURCES_CM4 =  \
$(C_SOURCES_COMMON) \
CM4/Src/main.c \
CM4/Src/stm32h7xx_it.c \
CM4/Src/stm32h7xx_hal_msp.c


C_SOURCES_CM7 =  \
$(C_SOURCES_COMMON) \
CM7/Src/main.c \
CM7/Src/usb_device.c \
CM7/Src/usbd_conf.c \
CM7/Src/usbd_desc.c \
CM7/Src/usbd_cdc_if.c \
CM7/Src/stm32h7xx_it.c \
CM7/Src/stm32h7xx_hal_msp.c \
Middlewares/ST/STM32_USB_Device_Library/Core/Src/usbd_core.c \
Middlewares/ST/STM32_USB_Device_Library/Core/Src/usbd_ctlreq.c \
Middlewares/ST/STM32_USB_Device_Library/Core/Src/usbd_ioreq.c \
Middlewares/ST/STM32_USB_Device_Library/Class/CDC/Src/usbd_cdc.c

# ASM sources
ASM_SOURCES_CM4 =  \
startup_stm32h745xx_CM4.s
ASM_SOURCES_CM7 =  \
startup_stm32h745xx_CM7.s


#######################################
# binaries
#######################################
PREFIX = arm-none-eabi-
# The gcc compiler bin path can be either defined in make command via GCC_PATH variable (> make GCC_PATH=xxx)
# either it can be added to the PATH environment variable.
ifdef GCC_PATH
CC = $(GCC_PATH)/$(PREFIX)gcc
AS = $(GCC_PATH)/$(PREFIX)gcc -x assembler-with-cpp
CP = $(GCC_PATH)/$(PREFIX)objcopy
SZ = $(GCC_PATH)/$(PREFIX)size
else
CC = $(PREFIX)gcc
AS = $(PREFIX)gcc -x assembler-with-cpp
CP = $(PREFIX)objcopy
SZ = $(PREFIX)size
endif
HEX = $(CP) -O ihex
BIN = $(CP) -O binary -S
 
#######################################
# CFLAGS
#######################################
# cpu
CPU_CM4 = -mcpu=cortex-m4
CPU_CM7 = -mcpu=cortex-m7

# fpu
FPU_CM4 = -mfpu=fpv4-sp-d16
FPU_CM7 = -mfpu=fpv5-d16

# float-abi
FLOAT-ABI = -mfloat-abi=hard

# mcu
MCU_CM4 = $(CPU_CM4) -mthumb $(FPU_CM4) $(FLOAT-ABI)
MCU_CM7 = $(CPU_CM7) -mthumb $(FPU_CM7) $(FLOAT-ABI)

# macros for gcc
# AS defines
AS_DEFS = 

# C defines
C_DEFS_COMMON =  \
-DUSE_HAL_DRIVER \
-DSTM32H745xx

C_DEFS_CM4 = \
$(C_DEFS_COMMON) \
-DCORE_CM4

C_DEFS_CM7 = \
$(C_DEFS_COMMON) \
-DCORE_CM7


# AS includes
AS_INCLUDES = 

# C includes
C_INCLUDES_COMMON =  \
-IDrivers/STM32H7xx_HAL_Driver/Inc \
-IDrivers/STM32H7xx_HAL_Driver/Inc/Legacy \
-IDrivers/CMSIS/Device/ST/STM32H7xx/Include \
-IDrivers/CMSIS/Include

C_INCLUDES_CM4 =  \
$(C_INCLUDES_COMMON) \
-ICM4/Inc

C_INCLUDES_CM7 =  \
$(C_INCLUDES_COMMON) \
-ICM7/Inc \
-IMiddlewares/ST/STM32_USB_Device_Library/Core/Inc \
-IMiddlewares/ST/STM32_USB_Device_Library/Class/CDC/Inc

# compile gcc flags
ASFLAGS_CM4 = $(MCU_CM4) $(AS_DEFS) $(AS_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections
ASFLAGS_CM7 = $(MCU_CM7) $(AS_DEFS) $(AS_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

CFLAGS_CM4 = $(MCU_CM4) $(C_DEFS_CM4) $(C_INCLUDES_CM4) $(OPT) -Wall -fdata-sections -ffunction-sections
CFLAGS_CM7 = $(MCU_CM7) $(C_DEFS_CM7) $(C_INCLUDES_CM7) $(OPT) -Wall -fdata-sections -ffunction-sections

ifeq ($(DEBUG), 1)
CFLAGS += -g -gdwarf-2
endif


# Generate dependency information
CFLAGS += -MMD -MP -MF"$(@:%.o=%.d)"


#######################################
# LDFLAGS
#######################################
# link script
LDSCRIPT_CM4 = stm32h745xx_flash_CM4.ld
LDSCRIPT_CM7 = stm32h745xx_flash_CM7.ld

# libraries
LIBS = -lc -lm -lnosys 
LIBDIR = 
LDFLAGS_CM4 = $(MCU_CM4) -specs=nano.specs -T$(LDSCRIPT_CM4) $(LIBDIR) $(LIBS) -Wl,-Map=$(BUILD_DIR_CM4)/$(TARGET_CM4).map,--cref -Wl,--gc-sections
LDFLAGS_CM7 = $(MCU_CM7) -specs=nano.specs -T$(LDSCRIPT_CM7) $(LIBDIR) $(LIBS) -Wl,-Map=$(BUILD_DIR_CM7)/$(TARGET_CM7).map,--cref -Wl,--gc-sections

# list of objects
OBJECTS_CM4 = $(addprefix $(BUILD_DIR_CM4)/,$(notdir $(C_SOURCES_CM4:.c=.o)))
vpath %.c $(sort $(dir $(C_SOURCES_CM4)))
OBJECTS_CM7 = $(addprefix $(BUILD_DIR_CM7)/,$(notdir $(C_SOURCES_CM7:.c=.o)))
vpath %.c $(sort $(dir $(C_SOURCES_CM7)))
# list of ASM program objects
OBJECTS_CM4 += $(addprefix $(BUILD_DIR_CM4)/,$(notdir $(ASM_SOURCES_CM4:.s=.o)))
vpath %.s $(sort $(dir $(ASM_SOURCES_CM4)))
OBJECTS_CM7 += $(addprefix $(BUILD_DIR_CM7)/,$(notdir $(ASM_SOURCES_CM7:.s=.o)))
vpath %.s $(sort $(dir $(ASM_SOURCES_CM7)))

# default action: build all
all: all_cm4 all_cm7

all_cm4: $(BUILD_DIR_CM4)/$(TARGET_CM4).elf $(BUILD_DIR_CM4)/$(TARGET_CM4).hex $(BUILD_DIR_CM4)/$(TARGET_CM4).bin copy_cm4
all_cm7: $(BUILD_DIR_CM7)/$(TARGET_CM7).elf $(BUILD_DIR_CM7)/$(TARGET_CM7).hex $(BUILD_DIR_CM7)/$(TARGET_CM7).bin copy_cm7

copy_cm4: $(OUT_DIR)
ifeq ($(OS),Windows_NT)
	copy $(BUILD_DIR_CM4)\\$(TARGET_CM4).elf out\\$(TARGET_CM4).elf
	copy $(BUILD_DIR_CM4)\\$(TARGET_CM4).hex out\\$(TARGET_CM4).hex
	copy $(BUILD_DIR_CM4)\\$(TARGET_CM4).bin out\\$(TARGET_CM4).bin
	copy $(BUILD_DIR_CM4)\\$(TARGET_CM4).map out\\$(TARGET_CM4).map
else
	cp -f $(BUILD_DIR_CM4)/$(TARGET_CM4).elf out/$(TARGET_CM4).elf
	cp -f $(BUILD_DIR_CM4)/$(TARGET_CM4).hex out/$(TARGET_CM4).hex
	cp -f $(BUILD_DIR_CM4)/$(TARGET_CM4).bin out/$(TARGET_CM4).bin
	cp -f $(BUILD_DIR_CM4)/$(TARGET_CM4).map out/$(TARGET_CM4).map
endif

copy_cm7: $(OUT_DIR)
ifeq ($(OS),Windows_NT)
	copy $(BUILD_DIR_CM7)\\$(TARGET_CM7).elf out\\$(TARGET_CM7).elf
	copy $(BUILD_DIR_CM7)\\$(TARGET_CM7).hex out\\$(TARGET_CM7).hex
	copy $(BUILD_DIR_CM7)\\$(TARGET_CM7).bin out\\$(TARGET_CM7).bin
	copy $(BUILD_DIR_CM7)\\$(TARGET_CM7).map out\\$(TARGET_CM7).map
else
	cp -f $(BUILD_DIR_CM7)/$(TARGET_CM7).elf out/$(TARGET_CM7).elf
	cp -f $(BUILD_DIR_CM7)/$(TARGET_CM7).hex out/$(TARGET_CM7).hex
	cp -f $(BUILD_DIR_CM7)/$(TARGET_CM7).bin out/$(TARGET_CM7).bin
	cp -f $(BUILD_DIR_CM7)/$(TARGET_CM7).map out/$(TARGET_CM7).map
endif

#######################################
# build the application
#######################################

$(BUILD_DIR_CM4)/%.o: %.c Makefile | $(BUILD_DIR_CM4) 
	$(CC) -c $(CFLAGS_CM4) $(CFLAGS) -Wa,-a,-ad,-alms=$(BUILD_DIR_CM4)/$(notdir $(<:.c=.lst)) $< -o $@
$(BUILD_DIR_CM7)/%.o: %.c Makefile | $(BUILD_DIR_CM7) 
	$(CC) -c $(CFLAGS_CM7) $(CFLAGS) -Wa,-a,-ad,-alms=$(BUILD_DIR_CM7)/$(notdir $(<:.c=.lst)) $< -o $@

$(BUILD_DIR_CM4)/%.o: %.s Makefile | $(BUILD_DIR_CM4)
	$(AS) -c $(CFLAGS_CM4) $(CFLAGS) $< -o $@
$(BUILD_DIR_CM7)/%.o: %.s Makefile | $(BUILD_DIR_CM7)
	$(AS) -c $(CFLAGS_CM7) $(CFLAGS) $< -o $@

$(BUILD_DIR_CM4)/$(TARGET_CM4).elf: $(OBJECTS_CM4) Makefile
	$(CC) $(OBJECTS_CM4) $(LDFLAGS_CM4) -o $@
	$(SZ) $@
$(BUILD_DIR_CM7)/$(TARGET_CM7).elf: $(OBJECTS_CM7) Makefile
	$(CC) $(OBJECTS_CM7) $(LDFLAGS_CM7) -o $@
	$(SZ) $@

$(BUILD_DIR_CM4)/%.hex: $(BUILD_DIR_CM4)/%.elf | $(BUILD_DIR_CM4)
	$(HEX) $< $@
$(BUILD_DIR_CM7)/%.hex: $(BUILD_DIR_CM7)/%.elf | $(BUILD_DIR_CM7)
	$(HEX) $< $@
	
$(BUILD_DIR_CM4)/%.bin: $(BUILD_DIR_CM4)/%.elf | $(BUILD_DIR_CM4)
	$(BIN) $< $@
$(BUILD_DIR_CM7)/%.bin: $(BUILD_DIR_CM7)/%.elf | $(BUILD_DIR_CM7)
	$(BIN) $< $@
	
$(BUILD_DIR_CM4):
	mkdir $@
$(BUILD_DIR_CM7):
	mkdir $@
$(OUT_DIR):
	mkdir $@

#######################################
# clean up
#######################################
clean_cm4:
ifeq ($(OS),Windows_NT)
	-rmdir /S /Q $(BUILD_DIR_CM4)
else
	-rm -fR $(BUILD_DIR_CM4)
endif
clean_cm7:
ifeq ($(OS),Windows_NT)
	-rmdir /S /Q $(BUILD_DIR_CM7)
else
	-rm -fR $(BUILD_DIR_CM7)
endif
clean: clean_cm4 clean_cm7
  
#######################################
# dependencies
#######################################
#-include $(wildcard $(BUILD_DIR_CM4)/*.d)
#-include $(wildcard $(BUILD_DIR_CM7)/*.d)

# *** EOF ***